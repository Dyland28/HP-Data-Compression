DROP TABLE CAPSTONE.DEVICE_NAME_REF;
CREATE TABLE CAPSTONE.DEVICE_NAME_REF

(
DEVICE_NAME_KEY NUMBER GENERATED ALWAYS AS IDENTITY START WITH 10,
DEVICE_NAME VARCHAR2(16) NOT NULL
)
PARALLEL (DEGREE DEFAULT)
NOLOGGING;

ALTER TABLE CAPSTONE.DEVICE_NAME_REF ADD CONSTRAINT DEVICE_NAME_REF_PK PRIMARY KEY (DEVICE_NAME);


INSERT INTO CAPSTONE.DEVICE_NAME_REF

(
DEVICE_NAME
)

SELECT DISTINCT
  DEVICE_NAME
FROM CAPSTONE.PARENT_TABLE_TEST;

COMMIT;

SELECT * FROM CAPSTONE.DEVICE_NAME_REF ORDER BY DEVICE_NAME;

DROP TABLE CAPSTONE.PRIMARY_LOCATION_REF;
CREATE TABLE CAPSTONE.PRIMARY_LOCATION_REF

(
PRIMARY_LOCATION_KEY NUMBER GENERATED ALWAYS AS IDENTITY START WITH 10,
PRIMARY_LOCATION VARCHAR2(16) NOT NULL
)
PARALLEL (DEGREE DEFAULT)
NOLOGGING;

ALTER TABLE CAPSTONE.PRIMARY_LOCATION_REF ADD CONSTRAINT PRIMARY_LOCATION_REF_PK PRIMARY KEY (PRIMARY_LOCATION);


INSERT INTO CAPSTONE.PRIMARY_LOCATION_REF

(
PRIMARY_LOCATION
)

SELECT DISTINCT
  PRIMARY_LOCATION
FROM CAPSTONE.CHILD_TABLE_TEST;

COMMIT;

SELECT * FROM CAPSTONE.PRIMARY_LOCATION_REF ORDER BY PRIMARY_LOCATION;

DROP TABLE CAPSTONE.SECONDARY_LOCATION_REF;
CREATE TABLE CAPSTONE.SECONDARY_LOCATION_REF

(
SECONDARY_LOCATION_KEY NUMBER GENERATED ALWAYS AS IDENTITY START WITH 10,
SECONDARY_LOCATION VARCHAR2(16) NOT NULL
)
PARALLEL (DEGREE DEFAULT)
NOLOGGING;

ALTER TABLE CAPSTONE.SECONDARY_LOCATION_REF ADD CONSTRAINT SECONDARY_LOCATION_REF_PK PRIMARY KEY (SECONDARY_LOCATION);


INSERT INTO CAPSTONE.SECONDARY_LOCATION_REF

(
SECONDARY_LOCATION
)

SELECT DISTINCT
  SECONDARY_LOCATION
FROM CAPSTONE.CHILD_TABLE_TEST;

COMMIT;