TRUNCATE TABLE CAPSTONE.T1_REF;
CREATE TABLE CAPSTONE.T1_REF
(
VARCHAR_KEY NUMBER,
VARCHAR_1 VARCHAR2(1),
VARCHAR_2 VARCHAR2(2),
VARCHAR_4 VARCHAR2(4),
VARCHAR_8 VARCHAR2(8),
VARCHAR_16 VARCHAR2(16)
)
NOLOGGING
NOCOMPRESS
TABLESPACE CAP8K;

BEGIN

FOR A IN 0..31 LOOP

INSERT INTO CAPSTONE.T1_REF

SELECT
    A,
    RPAD(NCHR(65+A),1,NCHR(65+A)) AS VARCHAR_1,
    RPAD(NCHR(65+A),2,NCHR(65+A)) AS VARCHAR_2,
    RPAD(NCHR(65+A),4,NCHR(65+A)) AS VARCHAR_4,
    RPAD(NCHR(65+A),8,NCHR(65+A)) AS VARCHAR_8,
    RPAD(NCHR(65+A),16,NCHR(65+A)) AS VARCHAR_16
FROM DUAL;

END LOOP;
COMMIT;
END;
/

SELECT * FROM CAPSTONE.T1_REF;

CREATE TABLE CAPSTONE.T1_L1_BC16_VARCHAR_BASIC
COMPRESS BASIC
TABLESPACE CAP8K

AS SELECT * FROM(
WITH TESTING AS

(
SELECT
    LEVEL AS LEVEL_NUMBER,
    MOD(LEVEL,16) AS MOD_LEVEL
FROM DUAL
CONNECT BY LEVEL <= 10000
)

SELECT
    B.VARCHAR_1
FROM TESTING A
    INNER JOIN CAPSTONE.T1_REF B
        ON MOD_LEVEL = B.VARCHAR_KEY
ORDER BY
    A.LEVEL_NUMBER
);
    

SELECT
    A.COMPRESS_FOR,
    A.OWNER,
    A.TABLE_NAME,
    A.TABLESPACE_NAME,
    A.INITIAL_EXTENT,
    A.NEXT_EXTENT,
    A.NUM_ROWS,
    B.BLOCK_SIZE/POWER(1024,1) || 'k' AS BLOCK_SIZE,
    A.BLOCKS,
    B.BLOCK_SIZE * A.BLOCKS / POWER(1024,2) AS TABLE_SIZE_MB
FROM DBA_TABLES A
    INNER JOIN DBA_TABLESPACES B
        ON A.TABLESPACE_NAME = B.TABLESPACE_NAME
WHERE B.TABLESPACE_NAME IN ('CAP8K','CAP16K','CAP32K')
ORDER BY
    TABLE_SIZE_MB;

SELECT * FROM DBA_EXTENTS
WHERE TABLESPACE_NAME = 'CAP8K';

SELECT
    *
FROM CAPSTONE.T1_L16_BC1_VARCHAR_BASIC;